package com.mooncell07.cecc.core

data class INSTR(
    val insType: InstructionType,
    val addrMode: AddressingMode,
    val registerType: RegisterType,
    val flagType: FlagType,
)

val INSTAB: Array<INSTR> = Array(256) { INSTR(InstructionType.NONE, AddressingMode.NONE, RegisterType.NONE, FlagType.NONE) }

fun buildInstructionTable() {
    INSTAB[0x00] = INSTR(InstructionType.BRK, AddressingMode.IMPLIED, RegisterType.NONE, FlagType.NONE)
    INSTAB[0x01] = INSTR(InstructionType.ORA, AddressingMode.X_INDIRECT, RegisterType.A, FlagType.NONE)
    INSTAB[0x05] = INSTR(InstructionType.ORA, AddressingMode.ZEROPAGE, RegisterType.A, FlagType.NONE)
    INSTAB[0x06] = INSTR(InstructionType.ASL, AddressingMode.ZEROPAGE, RegisterType.NONE, FlagType.C)
    INSTAB[0x08] = INSTR(InstructionType.PUSH, AddressingMode.IMPLIED, RegisterType.SR, FlagType.NONE)
    INSTAB[0x09] = INSTR(InstructionType.ORA, AddressingMode.IMMEDIATE, RegisterType.A, FlagType.NONE)
    INSTAB[0x0A] = INSTR(InstructionType.ASL, AddressingMode.ACCUMULATOR, RegisterType.NONE, FlagType.C)
    INSTAB[0x0D] = INSTR(InstructionType.ORA, AddressingMode.ABSOLUTE, RegisterType.A, FlagType.NONE)
    INSTAB[0x0E] = INSTR(InstructionType.ASL, AddressingMode.ABSOLUTE, RegisterType.NONE, FlagType.C)

    INSTAB[0x10] = INSTR(InstructionType.BRCLR, AddressingMode.RELATIVE, RegisterType.NONE, FlagType.N)
    INSTAB[0x11] = INSTR(InstructionType.ORA, AddressingMode.INDIRECT_Y, RegisterType.A, FlagType.NONE)
    INSTAB[0x15] = INSTR(InstructionType.ORA, AddressingMode.ZEROPAGE_X, RegisterType.A, FlagType.NONE)
    INSTAB[0x16] = INSTR(InstructionType.ASL, AddressingMode.ZEROPAGE_X, RegisterType.NONE, FlagType.C)
    INSTAB[0x18] = INSTR(InstructionType.CLEAR, AddressingMode.IMPLIED, RegisterType.NONE, FlagType.C)
    INSTAB[0x19] = INSTR(InstructionType.ORA, AddressingMode.ABSOLUTE_Y, RegisterType.A, FlagType.NONE)
    INSTAB[0x1D] = INSTR(InstructionType.ORA, AddressingMode.ABSOLUTE_X, RegisterType.A, FlagType.NONE)
    INSTAB[0x1E] = INSTR(InstructionType.ASL, AddressingMode.ABSOLUTE_X, RegisterType.NONE, FlagType.C)

    INSTAB[0x20] = INSTR(InstructionType.JSR, AddressingMode.ABSOLUTE, RegisterType.NONE, FlagType.NONE)
    INSTAB[0x21] = INSTR(InstructionType.AND, AddressingMode.X_INDIRECT, RegisterType.A, FlagType.NONE)
    INSTAB[0x24] = INSTR(InstructionType.BIT, AddressingMode.ZEROPAGE, RegisterType.SR, FlagType.NONE)
    INSTAB[0x25] = INSTR(InstructionType.AND, AddressingMode.ZEROPAGE, RegisterType.A, FlagType.NONE)
    INSTAB[0x26] = INSTR(InstructionType.ROL, AddressingMode.ZEROPAGE, RegisterType.NONE, FlagType.C)
    INSTAB[0x28] = INSTR(InstructionType.PULL, AddressingMode.IMPLIED, RegisterType.SR, FlagType.NONE)
    INSTAB[0x29] = INSTR(InstructionType.AND, AddressingMode.IMMEDIATE, RegisterType.A, FlagType.NONE)
    INSTAB[0x2A] = INSTR(InstructionType.ROL, AddressingMode.ACCUMULATOR, RegisterType.NONE, FlagType.C)
    INSTAB[0x2C] = INSTR(InstructionType.BIT, AddressingMode.ABSOLUTE, RegisterType.SR, FlagType.NONE)
    INSTAB[0x2D] = INSTR(InstructionType.AND, AddressingMode.ABSOLUTE, RegisterType.A, FlagType.NONE)
    INSTAB[0x2E] = INSTR(InstructionType.ROL, AddressingMode.ABSOLUTE, RegisterType.NONE, FlagType.C)

    INSTAB[0x30] = INSTR(InstructionType.BRSET, AddressingMode.RELATIVE, RegisterType.NONE, FlagType.N)
    INSTAB[0x31] = INSTR(InstructionType.AND, AddressingMode.INDIRECT_Y, RegisterType.A, FlagType.NONE)
    INSTAB[0x35] = INSTR(InstructionType.AND, AddressingMode.ZEROPAGE_X, RegisterType.A, FlagType.NONE)
    INSTAB[0x36] = INSTR(InstructionType.ROL, AddressingMode.ZEROPAGE_X, RegisterType.NONE, FlagType.C)
    INSTAB[0x38] = INSTR(InstructionType.SET, AddressingMode.IMPLIED, RegisterType.NONE, FlagType.C)
    INSTAB[0x39] = INSTR(InstructionType.AND, AddressingMode.ABSOLUTE_Y, RegisterType.A, FlagType.NONE)
    INSTAB[0x3D] = INSTR(InstructionType.AND, AddressingMode.ABSOLUTE_X, RegisterType.A, FlagType.NONE)
    INSTAB[0x3E] = INSTR(InstructionType.ROL, AddressingMode.ABSOLUTE_X, RegisterType.NONE, FlagType.C)

    INSTAB[0x40] = INSTR(InstructionType.RTI, AddressingMode.IMPLIED, RegisterType.NONE, FlagType.NONE)
    INSTAB[0x41] = INSTR(InstructionType.EOR, AddressingMode.X_INDIRECT, RegisterType.A, FlagType.NONE)
    INSTAB[0x45] = INSTR(InstructionType.EOR, AddressingMode.ZEROPAGE, RegisterType.A, FlagType.NONE)
    INSTAB[0x46] = INSTR(InstructionType.LSR, AddressingMode.ZEROPAGE, RegisterType.NONE, FlagType.C)
    INSTAB[0x48] = INSTR(InstructionType.PUSH, AddressingMode.IMPLIED, RegisterType.A, FlagType.NONE)
    INSTAB[0x49] = INSTR(InstructionType.EOR, AddressingMode.IMMEDIATE, RegisterType.A, FlagType.NONE)
    INSTAB[0x4A] = INSTR(InstructionType.LSR, AddressingMode.ACCUMULATOR, RegisterType.NONE, FlagType.C)
    INSTAB[0x4C] = INSTR(InstructionType.JMP, AddressingMode.ABSOLUTE, RegisterType.NONE, FlagType.NONE)
    INSTAB[0x4D] = INSTR(InstructionType.EOR, AddressingMode.ABSOLUTE, RegisterType.A, FlagType.NONE)
    INSTAB[0x4E] = INSTR(InstructionType.LSR, AddressingMode.ABSOLUTE, RegisterType.NONE, FlagType.C)

    INSTAB[0x50] = INSTR(InstructionType.BRCLR, AddressingMode.RELATIVE, RegisterType.NONE, FlagType.V)
    INSTAB[0x51] = INSTR(InstructionType.EOR, AddressingMode.INDIRECT_Y, RegisterType.A, FlagType.NONE)
    INSTAB[0x55] = INSTR(InstructionType.EOR, AddressingMode.ZEROPAGE_X, RegisterType.A, FlagType.NONE)
    INSTAB[0x56] = INSTR(InstructionType.LSR, AddressingMode.ZEROPAGE_X, RegisterType.NONE, FlagType.C)
    INSTAB[0x58] = INSTR(InstructionType.CLEAR, AddressingMode.IMPLIED, RegisterType.NONE, FlagType.I)
    INSTAB[0x59] = INSTR(InstructionType.EOR, AddressingMode.ABSOLUTE_Y, RegisterType.A, FlagType.NONE)
    INSTAB[0x5D] = INSTR(InstructionType.EOR, AddressingMode.ABSOLUTE_X, RegisterType.A, FlagType.NONE)
    INSTAB[0x5E] = INSTR(InstructionType.LSR, AddressingMode.ABSOLUTE_X, RegisterType.NONE, FlagType.C)

    INSTAB[0x60] = INSTR(InstructionType.RTS, AddressingMode.IMPLIED, RegisterType.NONE, FlagType.NONE)
    INSTAB[0x61] = INSTR(InstructionType.ADC, AddressingMode.X_INDIRECT, RegisterType.A, FlagType.C)
    INSTAB[0x65] = INSTR(InstructionType.ADC, AddressingMode.ZEROPAGE, RegisterType.A, FlagType.C)
    INSTAB[0x66] = INSTR(InstructionType.ROR, AddressingMode.ZEROPAGE, RegisterType.NONE, FlagType.C)
    INSTAB[0x68] = INSTR(InstructionType.PULL, AddressingMode.IMPLIED, RegisterType.A, FlagType.NONE)
    INSTAB[0x69] = INSTR(InstructionType.ADC, AddressingMode.IMMEDIATE, RegisterType.A, FlagType.C)
    INSTAB[0x6A] = INSTR(InstructionType.ROR, AddressingMode.ACCUMULATOR, RegisterType.NONE, FlagType.C)
    INSTAB[0x6C] = INSTR(InstructionType.JMP, AddressingMode.INDIRECT, RegisterType.NONE, FlagType.NONE)
    INSTAB[0x6D] = INSTR(InstructionType.ADC, AddressingMode.ABSOLUTE, RegisterType.A, FlagType.C)
    INSTAB[0x6E] = INSTR(InstructionType.ROR, AddressingMode.ABSOLUTE, RegisterType.NONE, FlagType.C)

    INSTAB[0x70] = INSTR(InstructionType.BRSET, AddressingMode.RELATIVE, RegisterType.NONE, FlagType.V)
    INSTAB[0x71] = INSTR(InstructionType.ADC, AddressingMode.INDIRECT_Y, RegisterType.A, FlagType.C)
    INSTAB[0x75] = INSTR(InstructionType.ADC, AddressingMode.ZEROPAGE_X, RegisterType.A, FlagType.C)
    INSTAB[0x76] = INSTR(InstructionType.ROR, AddressingMode.ZEROPAGE_X, RegisterType.NONE, FlagType.C)
    INSTAB[0x78] = INSTR(InstructionType.SET, AddressingMode.IMPLIED, RegisterType.NONE, FlagType.I)
    INSTAB[0x79] = INSTR(InstructionType.ADC, AddressingMode.ABSOLUTE_Y, RegisterType.A, FlagType.C)
    INSTAB[0x7D] = INSTR(InstructionType.ADC, AddressingMode.ABSOLUTE_X, RegisterType.A, FlagType.C)
    INSTAB[0x7E] = INSTR(InstructionType.ROR, AddressingMode.ABSOLUTE_X, RegisterType.NONE, FlagType.C)

    INSTAB[0x81] = INSTR(InstructionType.STORE, AddressingMode.X_INDIRECT, RegisterType.A, FlagType.NONE)
    INSTAB[0x84] = INSTR(InstructionType.STORE, AddressingMode.ZEROPAGE, RegisterType.Y, FlagType.NONE)
    INSTAB[0x85] = INSTR(InstructionType.STORE, AddressingMode.ZEROPAGE, RegisterType.A, FlagType.NONE)
    INSTAB[0x86] = INSTR(InstructionType.STORE, AddressingMode.ZEROPAGE, RegisterType.X, FlagType.NONE)
    INSTAB[0x88] = INSTR(InstructionType.DECREMENT, AddressingMode.IMPLIED, RegisterType.Y, FlagType.NONE)
    INSTAB[0x8A] = INSTR(InstructionType.TXA, AddressingMode.IMPLIED, RegisterType.A, FlagType.NONE)
    INSTAB[0x8C] = INSTR(InstructionType.STORE, AddressingMode.ABSOLUTE, RegisterType.Y, FlagType.NONE)
    INSTAB[0x8D] = INSTR(InstructionType.STORE, AddressingMode.ABSOLUTE, RegisterType.A, FlagType.NONE)
    INSTAB[0x8E] = INSTR(InstructionType.STORE, AddressingMode.ABSOLUTE, RegisterType.X, FlagType.NONE)

    INSTAB[0x90] = INSTR(InstructionType.BRCLR, AddressingMode.RELATIVE, RegisterType.NONE, FlagType.C)
    INSTAB[0x91] = INSTR(InstructionType.STORE, AddressingMode.INDIRECT_Y, RegisterType.A, FlagType.NONE)
    INSTAB[0x94] = INSTR(InstructionType.STORE, AddressingMode.ZEROPAGE_X, RegisterType.Y, FlagType.NONE)
    INSTAB[0x95] = INSTR(InstructionType.STORE, AddressingMode.ZEROPAGE_X, RegisterType.A, FlagType.NONE)
    INSTAB[0x96] = INSTR(InstructionType.STORE, AddressingMode.ZEROPAGE_Y, RegisterType.X, FlagType.NONE)
    INSTAB[0x98] = INSTR(InstructionType.TYA, AddressingMode.IMPLIED, RegisterType.A, FlagType.NONE)
    INSTAB[0x99] = INSTR(InstructionType.STORE, AddressingMode.ABSOLUTE_Y, RegisterType.A, FlagType.NONE)
    INSTAB[0x9A] = INSTR(InstructionType.TXS, AddressingMode.IMPLIED, RegisterType.SP, FlagType.NONE)
    INSTAB[0x9D] = INSTR(InstructionType.STORE, AddressingMode.ABSOLUTE_X, RegisterType.A, FlagType.NONE)

    INSTAB[0xA0] = INSTR(InstructionType.LOAD, AddressingMode.IMMEDIATE, RegisterType.Y, FlagType.NONE)
    INSTAB[0xA1] = INSTR(InstructionType.LOAD, AddressingMode.X_INDIRECT, RegisterType.A, FlagType.NONE)
    INSTAB[0xA2] = INSTR(InstructionType.LOAD, AddressingMode.IMMEDIATE, RegisterType.X, FlagType.NONE)
    INSTAB[0xA4] = INSTR(InstructionType.LOAD, AddressingMode.ZEROPAGE, RegisterType.Y, FlagType.NONE)
    INSTAB[0xA5] = INSTR(InstructionType.LOAD, AddressingMode.ZEROPAGE, RegisterType.A, FlagType.NONE)
    INSTAB[0xA6] = INSTR(InstructionType.LOAD, AddressingMode.ZEROPAGE, RegisterType.X, FlagType.NONE)
    INSTAB[0xA8] = INSTR(InstructionType.TAY, AddressingMode.IMPLIED, RegisterType.Y, FlagType.NONE)
    INSTAB[0xA9] = INSTR(InstructionType.LOAD, AddressingMode.IMMEDIATE, RegisterType.A, FlagType.NONE)
    INSTAB[0xAA] = INSTR(InstructionType.TAX, AddressingMode.IMPLIED, RegisterType.X, FlagType.NONE)
    INSTAB[0xAC] = INSTR(InstructionType.LOAD, AddressingMode.ABSOLUTE, RegisterType.Y, FlagType.NONE)
    INSTAB[0xAD] = INSTR(InstructionType.LOAD, AddressingMode.ABSOLUTE, RegisterType.A, FlagType.NONE)
    INSTAB[0xAE] = INSTR(InstructionType.LOAD, AddressingMode.ABSOLUTE, RegisterType.X, FlagType.NONE)

    INSTAB[0xB0] = INSTR(InstructionType.BRSET, AddressingMode.RELATIVE, RegisterType.NONE, FlagType.C)
    INSTAB[0xB1] = INSTR(InstructionType.LOAD, AddressingMode.INDIRECT_Y, RegisterType.A, FlagType.NONE)
    INSTAB[0xB4] = INSTR(InstructionType.LOAD, AddressingMode.ZEROPAGE_X, RegisterType.Y, FlagType.NONE)
    INSTAB[0xB5] = INSTR(InstructionType.LOAD, AddressingMode.ZEROPAGE_X, RegisterType.A, FlagType.NONE)
    INSTAB[0xB6] = INSTR(InstructionType.LOAD, AddressingMode.ZEROPAGE_Y, RegisterType.X, FlagType.NONE)
    INSTAB[0xB8] = INSTR(InstructionType.CLEAR, AddressingMode.IMPLIED, RegisterType.NONE, FlagType.V)
    INSTAB[0xB9] = INSTR(InstructionType.LOAD, AddressingMode.ABSOLUTE_Y, RegisterType.A, FlagType.NONE)
    INSTAB[0xBA] = INSTR(InstructionType.TSX, AddressingMode.IMPLIED, RegisterType.X, FlagType.NONE)
    INSTAB[0xBC] = INSTR(InstructionType.LOAD, AddressingMode.ABSOLUTE_X, RegisterType.Y, FlagType.NONE)
    INSTAB[0xBD] = INSTR(InstructionType.LOAD, AddressingMode.ABSOLUTE_X, RegisterType.A, FlagType.NONE)
    INSTAB[0xBE] = INSTR(InstructionType.LOAD, AddressingMode.ABSOLUTE_Y, RegisterType.X, FlagType.NONE)

    INSTAB[0xC0] = INSTR(InstructionType.COMPARE, AddressingMode.IMMEDIATE, RegisterType.Y, FlagType.NONE)
    INSTAB[0xC1] = INSTR(InstructionType.COMPARE, AddressingMode.X_INDIRECT, RegisterType.A, FlagType.NONE)
    INSTAB[0xC4] = INSTR(InstructionType.COMPARE, AddressingMode.ZEROPAGE, RegisterType.Y, FlagType.NONE)
    INSTAB[0xC5] = INSTR(InstructionType.COMPARE, AddressingMode.ZEROPAGE, RegisterType.A, FlagType.NONE)
    INSTAB[0xC6] = INSTR(InstructionType.DECREMENT, AddressingMode.ZEROPAGE, RegisterType.NONE, FlagType.NONE)
    INSTAB[0xC8] = INSTR(InstructionType.INCREMENT, AddressingMode.IMPLIED, RegisterType.Y, FlagType.NONE)
    INSTAB[0xC9] = INSTR(InstructionType.COMPARE, AddressingMode.IMMEDIATE, RegisterType.A, FlagType.NONE)
    INSTAB[0xCA] = INSTR(InstructionType.DECREMENT, AddressingMode.IMPLIED, RegisterType.X, FlagType.NONE)
    INSTAB[0xCC] = INSTR(InstructionType.COMPARE, AddressingMode.ABSOLUTE, RegisterType.Y, FlagType.NONE)
    INSTAB[0xCD] = INSTR(InstructionType.COMPARE, AddressingMode.ABSOLUTE, RegisterType.A, FlagType.NONE)
    INSTAB[0xCE] = INSTR(InstructionType.DECREMENT, AddressingMode.ABSOLUTE, RegisterType.NONE, FlagType.NONE)

    INSTAB[0xD0] = INSTR(InstructionType.BRCLR, AddressingMode.RELATIVE, RegisterType.NONE, FlagType.Z)
    INSTAB[0xD1] = INSTR(InstructionType.COMPARE, AddressingMode.INDIRECT_Y, RegisterType.A, FlagType.NONE)
    INSTAB[0xD5] = INSTR(InstructionType.COMPARE, AddressingMode.ZEROPAGE_X, RegisterType.A, FlagType.NONE)
    INSTAB[0xD6] = INSTR(InstructionType.DECREMENT, AddressingMode.ZEROPAGE_X, RegisterType.NONE, FlagType.NONE)
    INSTAB[0xD8] = INSTR(InstructionType.CLEAR, AddressingMode.IMPLIED, RegisterType.NONE, FlagType.D)
    INSTAB[0xD9] = INSTR(InstructionType.COMPARE, AddressingMode.ABSOLUTE_Y, RegisterType.A, FlagType.NONE)
    INSTAB[0xDD] = INSTR(InstructionType.COMPARE, AddressingMode.ABSOLUTE_X, RegisterType.A, FlagType.NONE)
    INSTAB[0xDE] = INSTR(InstructionType.DECREMENT, AddressingMode.ABSOLUTE_X, RegisterType.NONE, FlagType.NONE)

    INSTAB[0xE0] = INSTR(InstructionType.COMPARE, AddressingMode.IMMEDIATE, RegisterType.X, FlagType.NONE)
    INSTAB[0xE1] = INSTR(InstructionType.SBC, AddressingMode.X_INDIRECT, RegisterType.A, FlagType.NONE)
    INSTAB[0xE4] = INSTR(InstructionType.COMPARE, AddressingMode.ZEROPAGE, RegisterType.X, FlagType.NONE)
    INSTAB[0xE5] = INSTR(InstructionType.SBC, AddressingMode.ZEROPAGE, RegisterType.A, FlagType.NONE)
    INSTAB[0xE6] = INSTR(InstructionType.INCREMENT, AddressingMode.ZEROPAGE, RegisterType.NONE, FlagType.NONE)
    INSTAB[0xE8] = INSTR(InstructionType.INCREMENT, AddressingMode.IMPLIED, RegisterType.X, FlagType.NONE)
    INSTAB[0xE9] = INSTR(InstructionType.SBC, AddressingMode.IMMEDIATE, RegisterType.A, FlagType.NONE)
    INSTAB[0xEA] = INSTR(InstructionType.NOP, AddressingMode.IMPLIED, RegisterType.NONE, FlagType.NONE)
    INSTAB[0xEC] = INSTR(InstructionType.COMPARE, AddressingMode.ABSOLUTE, RegisterType.X, FlagType.NONE)
    INSTAB[0xED] = INSTR(InstructionType.SBC, AddressingMode.ABSOLUTE, RegisterType.A, FlagType.NONE)
    INSTAB[0xEE] = INSTR(InstructionType.INCREMENT, AddressingMode.ABSOLUTE, RegisterType.X, FlagType.NONE)

    INSTAB[0xF0] = INSTR(InstructionType.BRSET, AddressingMode.RELATIVE, RegisterType.NONE, FlagType.Z)
    INSTAB[0xF1] = INSTR(InstructionType.SBC, AddressingMode.INDIRECT_Y, RegisterType.A, FlagType.NONE)
    INSTAB[0xF5] = INSTR(InstructionType.SBC, AddressingMode.ZEROPAGE_X, RegisterType.A, FlagType.NONE)
    INSTAB[0xF6] = INSTR(InstructionType.INCREMENT, AddressingMode.ZEROPAGE_X, RegisterType.NONE, FlagType.NONE)
    INSTAB[0xF8] = INSTR(InstructionType.SET, AddressingMode.IMPLIED, RegisterType.NONE, FlagType.D)
    INSTAB[0xF9] = INSTR(InstructionType.SBC, AddressingMode.ABSOLUTE_Y, RegisterType.A, FlagType.NONE)
    INSTAB[0xFD] = INSTR(InstructionType.SBC, AddressingMode.ABSOLUTE_X, RegisterType.A, FlagType.NONE)
    INSTAB[0xFE] = INSTR(InstructionType.INCREMENT, AddressingMode.ABSOLUTE_X, RegisterType.NONE, FlagType.NONE)
}
